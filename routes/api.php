<?php

/**
 * 飲食店向け簡易オーダーシステム
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

/**
 * get customerMenuGet
 * Summary: メニューの取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/customer/dish', 'CustomerController@customerMenuGet');
/**
 * get customerMenuDishGet
 * Summary: 料理の詳細を取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/customer/dish/{dish_id}', 'CustomerController@customerMenuDishGet');
/**
 * get customerOrderGet
 * Summary: 注文履歴、合計金額の取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/customer/order', 'CustomerController@customerOrderGet');
/**
 * post customerOrderPost
 * Summary: 注文・追加注文送信
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::post('/customer/order', 'CustomerController@customerOrderPost');
/**
 * post customerOrderFinish
 * Summary: 注文確定・会計依頼
 * Notes: お会計ボタンを押すとそこで注文が締め切られる。is_order_finishedの状態を変更する(false → true)。

 */
Route::post('/customer/order/finish', 'CustomerController@customerOrderFinish');
/**
 * get adminList
 * Summary: 管理者アカウントの一覧取得 (ownerは自分の店舗に所属しているアカウントのみ取得可能)
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/account', 'ManagementController@adminList');
/**
 * post adminSignUp
 * Summary: 新規管理者アカウント(owner, counter, kitchen)発行
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::post('/management/account', 'ManagementController@adminSignUp');
/**
 * delete adminDelete
 * Summary: 管理者アカウント(owner, counter, kitchen)削除
 * Notes: 

 */
Route::delete('/management/account/{admin_id}', 'ManagementController@adminDelete');
/**
 * get adminGet
 * Summary: 管理者アカウント情報取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/account/{admin_id}', 'ManagementController@adminGet');
/**
 * put adminModify
 * Summary: 管理者アカウント(owner, counter, kitchen)情報編集
 * Notes: 

 */
Route::put('/management/account/{admin_id}', 'ManagementController@adminModify');
/**
 * post menuCreate
 * Summary: メニューに料理を追加(新規作成)
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::post('/management/dish/byRestaurant/{restaurant_id}', 'ManagementController@menuCreate');
/**
 * get menuList
 * Summary: 料理メニューの一覧取得
 * Notes: 一人のオーナーが複数の店舗を経営している可能性を考慮し、restaurant_idをパラメータとして追加している。
 * Output-Formats: [application/json]
 */
Route::get('/management/dish/byRestaurant/{restaurant_id}', 'ManagementController@menuList');
/**
 * delete dishDelete
 * Summary: 料理の削除
 * Notes: 

 */
Route::delete('/management/dish/{dish_id}', 'ManagementController@dishDelete');
/**
 * get dishGet
 * Summary: 指定した料理情報取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/dish/{dish_id}', 'ManagementController@dishGet');
/**
 * put dishModify
 * Summary: 料理情報編集
 * Notes: 

 */
Route::put('/management/dish/{dish_id}', 'ManagementController@dishModify');
/**
 * post adminLogin
 * Summary: 管理者(system, owner, counter, kitchen)ログイン
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::post('/management/login', 'ManagementController@adminLogin');
/**
 * put orderedDishCancel
 * Summary: 注文した(+未提供)料理のキャンセル
 * Notes: 

 */
Route::put('/management/order/byOrderedDish/{ordered_dish_id}/cancel', 'ManagementController@orderedDishCancel');
/**
 * put orderedDishDelivery
 * Summary: 注文ステータスを提供済みにする
 * Notes: 

 */
Route::put('/management/order/byOrderedDish/{ordered_dish_id}/deliver', 'ManagementController@orderedDishDelivery');
/**
 * get orderList
 * Summary: 指定した店舗の注文一覧の取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/order/byRestaurant/{restaurant_id}', 'ManagementController@orderList');
/**
 * get unservedDishList
 * Summary: 指定した店舗の未提供料理一覧を取得 (注文時間順)
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/order/byRestaurant/{restaurant_id}/unserved', 'ManagementController@unservedDishList');
/**
 * get orderGet
 * Summary: 注文詳細の取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/order/{order_id}', 'ManagementController@orderGet');
/**
 * put orderPut
 * Summary: (会計済みボタン) 注文を完了する
 * Notes: 注文状態(is_paid)、座席のQRコードトークンを更新する。

 */
Route::put('/management/order/{order_id}/checkout', 'ManagementController@orderPut');
/**
 * get restaurantList
 * Summary: 店舗の一覧取得 (ownerは自分の店舗のみ取得可能)
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/restaurant', 'ManagementController@restaurantList');
/**
 * post restaurantSignUp
 * Summary: 新規店舗登録
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::post('/management/restaurant', 'ManagementController@restaurantSignUp');
/**
 * delete restaurantDelete
 * Summary: 店舗の削除
 * Notes: 

 */
Route::delete('/management/restaurant/{restaurant_id}', 'ManagementController@restaurantDelete');
/**
 * get restaurantGet
 * Summary: 指定した店舗情報取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/restaurant/{restaurant_id}', 'ManagementController@restaurantGet');
/**
 * put restaurantModify
 * Summary: 店舗情報編集
 * Notes: 

 */
Route::put('/management/restaurant/{restaurant_id}', 'ManagementController@restaurantModify');
/**
 * post seatAdd
 * Summary: 座席の追加
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::post('/management/seat/byRestaurant/{restaurant_id}', 'ManagementController@seatAdd');
/**
 * get seatList
 * Summary: 指定した店舗の座席情報一覧を取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/seat/byRestaurant/{restaurant_id}', 'ManagementController@seatList');
/**
 * delete seatDelete
 * Summary: 座席の削除
 * Notes: 

 */
Route::delete('/management/seat/{seat_id}', 'ManagementController@seatDelete');
/**
 * put seatEdit
 * Summary: 座席の編集 (編集後、自動QRコードトークン再発行)
 * Notes: 空席 -&gt; 使用不可に変更したい場合にも使える
 * Output-Formats: [application/json]
 */
Route::put('/management/seat/{seat_id}', 'ManagementController@seatEdit');
/**
 * get seatInfo
 * Summary: 指定した座席の情報を取得
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::get('/management/seat/{seat_id}', 'ManagementController@seatInfo');
/**
 * put seatRefresh
 * Summary: 座席のQRコードトークンを再発行
 * Notes: 
 * Output-Formats: [application/json]
 */
Route::put('/management/seat/{seat_id}/refresh', 'ManagementController@seatRefresh');

Route::middleware('auth:api')->get('/user', function (Request $request) {
    return $request->user();
});
